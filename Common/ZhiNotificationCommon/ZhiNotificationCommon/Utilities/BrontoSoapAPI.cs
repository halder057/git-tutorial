using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

namespace ZhiNotificationCommon.Utilities
{
    //------------------------------------------------------------------------------
    // <auto-generated>
    //     This code was generated by a tool.
    //     Runtime Version:2.0.50727.5472
    //
    //     Changes to this file may cause incorrect behavior and will be lost if
    //     the code is regenerated.
    // </auto-generated>
    //------------------------------------------------------------------------------

    // 
    // Assembly WebServiceStudio Version = 2.0.50727.5472
    // 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "BrontoSoapApiImplServiceSoapBinding", Namespace = "http://api.bronto.com/v4")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(recentActivitySearchRequest))]
    public partial class BrontoSoapApiImplService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        public sessionHeader sessionHeaderValue;

        /// <remarks/>
        public BrontoSoapApiImplService()
        {
            this.Url = "https://api.bronto.com/v4";
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public loginObject[] readLogins([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] loginFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber)
        {
            object[] results = this.Invoke("readLogins", new object[] {
                    filter,
                    pageNumber});
            return ((loginObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadLogins(loginFilter filter, int pageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readLogins", new object[] {
                    filter,
                    pageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public loginObject[] EndreadLogins(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((loginObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult deleteLogins([System.Xml.Serialization.XmlElementAttribute("accounts", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] loginObject[] accounts)
        {
            object[] results = this.Invoke("deleteLogins", new object[] {
                    accounts});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteLogins(loginObject[] accounts, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteLogins", new object[] {
                    accounts}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EnddeleteLogins(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult deleteDeliveryGroup([System.Xml.Serialization.XmlElementAttribute("deliveryGroups", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] deliveryGroupObject[] deliveryGroups)
        {
            object[] results = this.Invoke("deleteDeliveryGroup", new object[] {
                    deliveryGroups});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteDeliveryGroup(deliveryGroupObject[] deliveryGroups, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteDeliveryGroup", new object[] {
                    deliveryGroups}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EnddeleteDeliveryGroup(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addContactsToWorkflow([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] workflowObject workflow, [System.Xml.Serialization.XmlElementAttribute("contacts", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] contactObject[] contacts)
        {
            object[] results = this.Invoke("addContactsToWorkflow", new object[] {
                    workflow,
                    contacts});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddContactsToWorkflow(workflowObject workflow, contactObject[] contacts, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addContactsToWorkflow", new object[] {
                    workflow,
                    contacts}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddContactsToWorkflow(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public apiTokenObject[] readApiTokens([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] apiTokenFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber)
        {
            object[] results = this.Invoke("readApiTokens", new object[] {
                    filter,
                    pageNumber});
            return ((apiTokenObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadApiTokens(apiTokenFilter filter, int pageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readApiTokens", new object[] {
                    filter,
                    pageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public apiTokenObject[] EndreadApiTokens(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((apiTokenObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult updateMessageRules([System.Xml.Serialization.XmlElementAttribute("messageRules", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] messageRuleObject[] messageRules)
        {
            object[] results = this.Invoke("updateMessageRules", new object[] {
                    messageRules});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdateMessageRules(messageRuleObject[] messageRules, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updateMessageRules", new object[] {
                    messageRules}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndupdateMessageRules(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult deleteMessageRules([System.Xml.Serialization.XmlElementAttribute("messageRules", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] messageRuleObject[] messageRules)
        {
            object[] results = this.Invoke("deleteMessageRules", new object[] {
                    messageRules});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteMessageRules(messageRuleObject[] messageRules, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteMessageRules", new object[] {
                    messageRules}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EnddeleteMessageRules(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public mailListObject[] readLists([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] mailListFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber)
        {
            object[] results = this.Invoke("readLists", new object[] {
                    filter,
                    pageNumber});
            return ((mailListObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadLists(mailListFilter filter, int pageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readLists", new object[] {
                    filter,
                    pageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public mailListObject[] EndreadLists(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((mailListObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult deleteMessages([System.Xml.Serialization.XmlElementAttribute("messages", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] messageObject[] messages)
        {
            object[] results = this.Invoke("deleteMessages", new object[] {
                    messages});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteMessages(messageObject[] messages, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteMessages", new object[] {
                    messages}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EnddeleteMessages(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult updateSMSDeliveries([System.Xml.Serialization.XmlElementAttribute("smsdeliveries", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] smsDeliveryObject[] smsdeliveries)
        {
            object[] results = this.Invoke("updateSMSDeliveries", new object[] {
                    smsdeliveries});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdateSMSDeliveries(smsDeliveryObject[] smsdeliveries, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updateSMSDeliveries", new object[] {
                    smsdeliveries}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndupdateSMSDeliveries(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public messageFolderObject[] readMessageFolders([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] messageFolderFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber)
        {
            object[] results = this.Invoke("readMessageFolders", new object[] {
                    filter,
                    pageNumber});
            return ((messageFolderObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadMessageFolders(messageFolderFilter filter, int pageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readMessageFolders", new object[] {
                    filter,
                    pageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public messageFolderObject[] EndreadMessageFolders(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((messageFolderObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addUpdateOrder([System.Xml.Serialization.XmlElementAttribute("orders", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] orderObject[] orders)
        {
            object[] results = this.Invoke("addUpdateOrder", new object[] {
                    orders});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddUpdateOrder(orderObject[] orders, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addUpdateOrder", new object[] {
                    orders}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddUpdateOrder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult updateDeliveryGroup([System.Xml.Serialization.XmlElementAttribute("deliveryGroups", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] deliveryGroupObject[] deliveryGroups)
        {
            object[] results = this.Invoke("updateDeliveryGroup", new object[] {
                    deliveryGroups});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdateDeliveryGroup(deliveryGroupObject[] deliveryGroups, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updateDeliveryGroup", new object[] {
                    deliveryGroups}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndupdateDeliveryGroup(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public headerFooterObject[] readHeaderFooters([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] headerFooterFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeContent, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber)
        {
            object[] results = this.Invoke("readHeaderFooters", new object[] {
                    filter,
                    includeContent,
                    pageNumber});
            return ((headerFooterObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadHeaderFooters(headerFooterFilter filter, bool includeContent, int pageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readHeaderFooters", new object[] {
                    filter,
                    includeContent,
                    pageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public headerFooterObject[] EndreadHeaderFooters(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((headerFooterObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult deleteApiTokens([System.Xml.Serialization.XmlElementAttribute("tokens", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] apiTokenObject[] tokens)
        {
            object[] results = this.Invoke("deleteApiTokens", new object[] {
                    tokens});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteApiTokens(apiTokenObject[] tokens, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteApiTokens", new object[] {
                    tokens}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EnddeleteApiTokens(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addFields([System.Xml.Serialization.XmlElementAttribute("fields", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] fieldObject[] fields)
        {
            object[] results = this.Invoke("addFields", new object[] {
                    fields});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddFields(fieldObject[] fields, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addFields", new object[] {
                    fields}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddFields(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult deleteHeaderFooters([System.Xml.Serialization.XmlElementAttribute("footers", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] headerFooterObject[] footers)
        {
            object[] results = this.Invoke("deleteHeaderFooters", new object[] {
                    footers});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteHeaderFooters(headerFooterObject[] footers, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteHeaderFooters", new object[] {
                    footers}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EnddeleteHeaderFooters(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult deleteWorkflows([System.Xml.Serialization.XmlElementAttribute("workflows", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] workflowObject[] workflows)
        {
            object[] results = this.Invoke("deleteWorkflows", new object[] {
                    workflows});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteWorkflows(workflowObject[] workflows, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteWorkflows", new object[] {
                    workflows}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EnddeleteWorkflows(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addToList([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] mailListObject list, [System.Xml.Serialization.XmlElementAttribute("contacts", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] contactObject[] contacts)
        {
            object[] results = this.Invoke("addToList", new object[] {
                    list,
                    contacts});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddToList(mailListObject list, contactObject[] contacts, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addToList", new object[] {
                    list,
                    contacts}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddToList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult updateContentTags([System.Xml.Serialization.XmlElementAttribute("contentTags", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] contentTagObject[] contentTags)
        {
            object[] results = this.Invoke("updateContentTags", new object[] {
                    contentTags});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdateContentTags(contentTagObject[] contentTags, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updateContentTags", new object[] {
                    contentTags}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndupdateContentTags(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public activityObject[] readActivities([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] activityFilter filter)
        {
            object[] results = this.Invoke("readActivities", new object[] {
                    filter});
            return ((activityObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadActivities(activityFilter filter, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readActivities", new object[] {
                    filter}, callback, asyncState);
        }

        /// <remarks/>
        public activityObject[] EndreadActivities(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((activityObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addSMSMessages([System.Xml.Serialization.XmlElementAttribute("messages", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] smsMessageObject[] messages)
        {
            object[] results = this.Invoke("addSMSMessages", new object[] {
                    messages});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddSMSMessages(smsMessageObject[] messages, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addSMSMessages", new object[] {
                    messages}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddSMSMessages(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public conversionObject[] readConversions([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] conversionFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber)
        {
            object[] results = this.Invoke("readConversions", new object[] {
                    filter,
                    pageNumber});
            return ((conversionObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadConversions(conversionFilter filter, int pageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readConversions", new object[] {
                    filter,
                    pageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public conversionObject[] EndreadConversions(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((conversionObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult deleteContacts([System.Xml.Serialization.XmlElementAttribute("contacts", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] contactObject[] contacts)
        {
            object[] results = this.Invoke("deleteContacts", new object[] {
                    contacts});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteContacts(contactObject[] contacts, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteContacts", new object[] {
                    contacts}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EnddeleteContacts(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addDeliveryGroup([System.Xml.Serialization.XmlElementAttribute("deliveryGroups", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] deliveryGroupObject[] deliveryGroups)
        {
            object[] results = this.Invoke("addDeliveryGroup", new object[] {
                    deliveryGroups});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddDeliveryGroup(deliveryGroupObject[] deliveryGroups, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addDeliveryGroup", new object[] {
                    deliveryGroups}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddDeliveryGroup(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult updateSMSKeywords([System.Xml.Serialization.XmlElementAttribute("keyword", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] smsKeywordObject[] keyword)
        {
            object[] results = this.Invoke("updateSMSKeywords", new object[] {
                    keyword});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdateSMSKeywords(smsKeywordObject[] keyword, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updateSMSKeywords", new object[] {
                    keyword}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndupdateSMSKeywords(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult updateMessages([System.Xml.Serialization.XmlElementAttribute("messages", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] messageObject[] messages)
        {
            object[] results = this.Invoke("updateMessages", new object[] {
                    messages});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdateMessages(messageObject[] messages, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updateMessages", new object[] {
                    messages}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndupdateMessages(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public contactObject[] readContacts([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] contactFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeLists, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool includeListsSpecified, [System.Xml.Serialization.XmlElementAttribute("fields", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] fields, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeSMSKeywords, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool includeSMSKeywordsSpecified, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeGeoIPData, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool includeGeoIPDataSpecified, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeTechnologyData, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool includeTechnologyDataSpecified, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeRFMData, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool includeRFMDataSpecified)
        {
            object[] results = this.Invoke("readContacts", new object[] {
                    filter,
                    includeLists,
                    includeListsSpecified,
                    fields,
                    pageNumber,
                    includeSMSKeywords,
                    includeSMSKeywordsSpecified,
                    includeGeoIPData,
                    includeGeoIPDataSpecified,
                    includeTechnologyData,
                    includeTechnologyDataSpecified,
                    includeRFMData,
                    includeRFMDataSpecified});
            return ((contactObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadContacts(contactFilter filter, bool includeLists, bool includeListsSpecified, string[] fields, int pageNumber, bool includeSMSKeywords, bool includeSMSKeywordsSpecified, bool includeGeoIPData, bool includeGeoIPDataSpecified, bool includeTechnologyData, bool includeTechnologyDataSpecified, bool includeRFMData, bool includeRFMDataSpecified, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readContacts", new object[] {
                    filter,
                    includeLists,
                    includeListsSpecified,
                    fields,
                    pageNumber,
                    includeSMSKeywords,
                    includeSMSKeywordsSpecified,
                    includeGeoIPData,
                    includeGeoIPDataSpecified,
                    includeTechnologyData,
                    includeTechnologyDataSpecified,
                    includeRFMData,
                    includeRFMDataSpecified}, callback, asyncState);
        }

        /// <remarks/>
        public contactObject[] EndreadContacts(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((contactObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public recentActivityObject[] readRecentOutboundActivities([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] recentOutboundActivitySearchRequest filter)
        {
            object[] results = this.Invoke("readRecentOutboundActivities", new object[] {
                    filter});
            return ((recentActivityObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadRecentOutboundActivities(recentOutboundActivitySearchRequest filter, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readRecentOutboundActivities", new object[] {
                    filter}, callback, asyncState);
        }

        /// <remarks/>
        public recentActivityObject[] EndreadRecentOutboundActivities(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((recentActivityObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addContentTags([System.Xml.Serialization.XmlElementAttribute("contentTags", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] contentTagObject[] contentTags)
        {
            object[] results = this.Invoke("addContentTags", new object[] {
                    contentTags});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddContentTags(contentTagObject[] contentTags, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addContentTags", new object[] {
                    contentTags}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddContentTags(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult updateDeliveries([System.Xml.Serialization.XmlElementAttribute("deliveries", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] deliveryObject[] deliveries)
        {
            object[] results = this.Invoke("updateDeliveries", new object[] {
                    deliveries});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdateDeliveries(deliveryObject[] deliveries, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updateDeliveries", new object[] {
                    deliveries}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndupdateDeliveries(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult deleteSMSMessages([System.Xml.Serialization.XmlElementAttribute("messages", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] smsMessageObject[] messages)
        {
            object[] results = this.Invoke("deleteSMSMessages", new object[] {
                    messages});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteSMSMessages(smsMessageObject[] messages, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteSMSMessages", new object[] {
                    messages}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EnddeleteSMSMessages(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addSMSKeywords([System.Xml.Serialization.XmlElementAttribute("keyword", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] smsKeywordObject[] keyword)
        {
            object[] results = this.Invoke("addSMSKeywords", new object[] {
                    keyword});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddSMSKeywords(smsKeywordObject[] keyword, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addSMSKeywords", new object[] {
                    keyword}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddSMSKeywords(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public workflowObject[] readWorkflows([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] workflowFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber)
        {
            object[] results = this.Invoke("readWorkflows", new object[] {
                    filter,
                    pageNumber});
            return ((workflowObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadWorkflows(workflowFilter filter, int pageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readWorkflows", new object[] {
                    filter,
                    pageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public workflowObject[] EndreadWorkflows(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((workflowObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult updateApiTokens([System.Xml.Serialization.XmlElementAttribute("tokens", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] apiTokenObject[] tokens)
        {
            object[] results = this.Invoke("updateApiTokens", new object[] {
                    tokens});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdateApiTokens(apiTokenObject[] tokens, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updateApiTokens", new object[] {
                    tokens}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndupdateApiTokens(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public accountObject[] readAccounts([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] accountFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeInfo, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber)
        {
            object[] results = this.Invoke("readAccounts", new object[] {
                    filter,
                    includeInfo,
                    pageNumber});
            return ((accountObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadAccounts(accountFilter filter, bool includeInfo, int pageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readAccounts", new object[] {
                    filter,
                    includeInfo,
                    pageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public accountObject[] EndreadAccounts(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((accountObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addToSMSKeyword([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] smsKeywordObject keyword, [System.Xml.Serialization.XmlElementAttribute("contacts", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] contactObject[] contacts)
        {
            object[] results = this.Invoke("addToSMSKeyword", new object[] {
                    keyword,
                    contacts});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddToSMSKeyword(smsKeywordObject keyword, contactObject[] contacts, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addToSMSKeyword", new object[] {
                    keyword,
                    contacts}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddToSMSKeyword(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult removeFromList([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] mailListObject list, [System.Xml.Serialization.XmlElementAttribute("contacts", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] contactObject[] contacts)
        {
            object[] results = this.Invoke("removeFromList", new object[] {
                    list,
                    contacts});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginremoveFromList(mailListObject list, contactObject[] contacts, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("removeFromList", new object[] {
                    list,
                    contacts}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndremoveFromList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public deliveryRecipientStatObject[] readDeliveryRecipients([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] deliveryRecipientFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber)
        {
            object[] results = this.Invoke("readDeliveryRecipients", new object[] {
                    filter,
                    pageNumber});
            return ((deliveryRecipientStatObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadDeliveryRecipients(deliveryRecipientFilter filter, int pageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readDeliveryRecipients", new object[] {
                    filter,
                    pageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public deliveryRecipientStatObject[] EndreadDeliveryRecipients(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((deliveryRecipientStatObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addLists([System.Xml.Serialization.XmlElementAttribute("lists", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] mailListObject[] lists)
        {
            object[] results = this.Invoke("addLists", new object[] {
                    lists});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddLists(mailListObject[] lists, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addLists", new object[] {
                    lists}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddLists(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public segmentObject[] readSegments([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] segmentFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber)
        {
            object[] results = this.Invoke("readSegments", new object[] {
                    filter,
                    pageNumber});
            return ((segmentObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadSegments(segmentFilter filter, int pageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readSegments", new object[] {
                    filter,
                    pageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public segmentObject[] EndreadSegments(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((segmentObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public smsKeywordObject[] readSMSKeywords([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] smsKeywordFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeDeleted, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber)
        {
            object[] results = this.Invoke("readSMSKeywords", new object[] {
                    filter,
                    includeDeleted,
                    pageNumber});
            return ((smsKeywordObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadSMSKeywords(smsKeywordFilter filter, bool includeDeleted, int pageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readSMSKeywords", new object[] {
                    filter,
                    includeDeleted,
                    pageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public smsKeywordObject[] EndreadSMSKeywords(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((smsKeywordObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public recentActivityObject[] readRecentInboundActivities([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] recentInboundActivitySearchRequest filter)
        {
            object[] results = this.Invoke("readRecentInboundActivities", new object[] {
                    filter});
            return ((recentActivityObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadRecentInboundActivities(recentInboundActivitySearchRequest filter, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readRecentInboundActivities", new object[] {
                    filter}, callback, asyncState);
        }

        /// <remarks/>
        public recentActivityObject[] EndreadRecentInboundActivities(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((recentActivityObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addDeliveries([System.Xml.Serialization.XmlElementAttribute("deliveries", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] deliveryObject[] deliveries)
        {
            object[] results = this.Invoke("addDeliveries", new object[] {
                    deliveries});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddDeliveries(deliveryObject[] deliveries, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addDeliveries", new object[] {
                    deliveries}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddDeliveries(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addContacts([System.Xml.Serialization.XmlElementAttribute("contacts", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] contactObject[] contacts)
        {
            object[] results = this.Invoke("addContacts", new object[] {
                    contacts});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddContacts(contactObject[] contacts, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addContacts", new object[] {
                    contacts}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddContacts(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addContactEvent([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string keyword, [System.Xml.Serialization.XmlElementAttribute("contacts", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] contactObject[] contacts)
        {
            object[] results = this.Invoke("addContactEvent", new object[] {
                    keyword,
                    contacts});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddContactEvent(string keyword, contactObject[] contacts, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addContactEvent", new object[] {
                    keyword,
                    contacts}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddContactEvent(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult deleteDeliveries([System.Xml.Serialization.XmlElementAttribute("deliveries", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] deliveryObject[] deliveries)
        {
            object[] results = this.Invoke("deleteDeliveries", new object[] {
                    deliveries});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteDeliveries(deliveryObject[] deliveries, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteDeliveries", new object[] {
                    deliveries}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EnddeleteDeliveries(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string login([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string apiToken)
        {
            object[] results = this.Invoke("login", new object[] {
                    apiToken});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginlogin(string apiToken, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("login", new object[] {
                    apiToken}, callback, asyncState);
        }

        /// <remarks/>
        public string Endlogin(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult deleteOrders([System.Xml.Serialization.XmlElementAttribute("orders", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] orderObject[] orders)
        {
            object[] results = this.Invoke("deleteOrders", new object[] {
                    orders});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteOrders(orderObject[] orders, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteOrders", new object[] {
                    orders}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EnddeleteOrders(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addOrUpdateDeliveryGroup([System.Xml.Serialization.XmlElementAttribute("deliveryGroups", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] deliveryGroupObject[] deliveryGroups)
        {
            object[] results = this.Invoke("addOrUpdateDeliveryGroup", new object[] {
                    deliveryGroups});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddOrUpdateDeliveryGroup(deliveryGroupObject[] deliveryGroups, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addOrUpdateDeliveryGroup", new object[] {
                    deliveryGroups}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddOrUpdateDeliveryGroup(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult updateMessageFolders([System.Xml.Serialization.XmlElementAttribute("messageFolders", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] messageFolderObject[] messageFolders)
        {
            object[] results = this.Invoke("updateMessageFolders", new object[] {
                    messageFolders});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdateMessageFolders(messageFolderObject[] messageFolders, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updateMessageFolders", new object[] {
                    messageFolders}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndupdateMessageFolders(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addOrUpdateOrders([System.Xml.Serialization.XmlElementAttribute("orders", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] orderObject[] orders)
        {
            object[] results = this.Invoke("addOrUpdateOrders", new object[] {
                    orders});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddOrUpdateOrders(orderObject[] orders, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addOrUpdateOrders", new object[] {
                    orders}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddOrUpdateOrders(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addOrUpdateContacts([System.Xml.Serialization.XmlElementAttribute("contacts", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] contactObject[] contacts)
        {
            object[] results = this.Invoke("addOrUpdateContacts", new object[] {
                    contacts});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddOrUpdateContacts(contactObject[] contacts, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addOrUpdateContacts", new object[] {
                    contacts}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddOrUpdateContacts(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public deliveryObject[] readDeliveries([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] deliveryFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeRecipients, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeContent, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber)
        {
            object[] results = this.Invoke("readDeliveries", new object[] {
                    filter,
                    includeRecipients,
                    includeContent,
                    pageNumber});
            return ((deliveryObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadDeliveries(deliveryFilter filter, bool includeRecipients, bool includeContent, int pageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readDeliveries", new object[] {
                    filter,
                    includeRecipients,
                    includeContent,
                    pageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public deliveryObject[] EndreadDeliveries(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((deliveryObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public smsDeliveryObject[] readSMSDeliveries([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] smsDeliveryFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeContent, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeRecipients, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber)
        {
            object[] results = this.Invoke("readSMSDeliveries", new object[] {
                    filter,
                    includeContent,
                    includeRecipients,
                    pageNumber});
            return ((smsDeliveryObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadSMSDeliveries(smsDeliveryFilter filter, bool includeContent, bool includeRecipients, int pageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readSMSDeliveries", new object[] {
                    filter,
                    includeContent,
                    includeRecipients,
                    pageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public smsDeliveryObject[] EndreadSMSDeliveries(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((smsDeliveryObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult updateLists([System.Xml.Serialization.XmlElementAttribute("lists", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] mailListObject[] lists)
        {
            object[] results = this.Invoke("updateLists", new object[] {
                    lists});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdateLists(mailListObject[] lists, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updateLists", new object[] {
                    lists}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndupdateLists(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public contentTagObject[] readContentTags([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] contentTagFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeContent, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber)
        {
            object[] results = this.Invoke("readContentTags", new object[] {
                    filter,
                    includeContent,
                    pageNumber});
            return ((contentTagObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadContentTags(contentTagFilter filter, bool includeContent, int pageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readContentTags", new object[] {
                    filter,
                    includeContent,
                    pageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public contentTagObject[] EndreadContentTags(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((contentTagObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addAccounts([System.Xml.Serialization.XmlElementAttribute("accounts", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] accountObject[] accounts)
        {
            object[] results = this.Invoke("addAccounts", new object[] {
                    accounts});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddAccounts(accountObject[] accounts, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addAccounts", new object[] {
                    accounts}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddAccounts(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult deleteLists([System.Xml.Serialization.XmlElementAttribute("lists", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] mailListObject[] lists)
        {
            object[] results = this.Invoke("deleteLists", new object[] {
                    lists});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteLists(mailListObject[] lists, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteLists", new object[] {
                    lists}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EnddeleteLists(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult deleteContentTags([System.Xml.Serialization.XmlElementAttribute("contentTags", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] contentTagObject[] contentTags)
        {
            object[] results = this.Invoke("deleteContentTags", new object[] {
                    contentTags});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteContentTags(contentTagObject[] contentTags, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteContentTags", new object[] {
                    contentTags}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EnddeleteContentTags(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult removeFromSMSKeyword([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] smsKeywordObject keyword, [System.Xml.Serialization.XmlElementAttribute("contacts", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] contactObject[] contacts)
        {
            object[] results = this.Invoke("removeFromSMSKeyword", new object[] {
                    keyword,
                    contacts});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginremoveFromSMSKeyword(smsKeywordObject keyword, contactObject[] contacts, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("removeFromSMSKeyword", new object[] {
                    keyword,
                    contacts}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndremoveFromSMSKeyword(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addMessages([System.Xml.Serialization.XmlElementAttribute("messages", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] messageObject[] messages)
        {
            object[] results = this.Invoke("addMessages", new object[] {
                    messages});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddMessages(messageObject[] messages, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addMessages", new object[] {
                    messages}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddMessages(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public fieldObject[] readFields([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] fieldsFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber)
        {
            object[] results = this.Invoke("readFields", new object[] {
                    filter,
                    pageNumber});
            return ((fieldObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadFields(fieldsFilter filter, int pageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readFields", new object[] {
                    filter,
                    pageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public fieldObject[] EndreadFields(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((fieldObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addHeaderFooters([System.Xml.Serialization.XmlElementAttribute("footers", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] headerFooterObject[] footers)
        {
            object[] results = this.Invoke("addHeaderFooters", new object[] {
                    footers});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddHeaderFooters(headerFooterObject[] footers, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addHeaderFooters", new object[] {
                    footers}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddHeaderFooters(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult updateFields([System.Xml.Serialization.XmlElementAttribute("fields", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] fieldObject[] fields)
        {
            object[] results = this.Invoke("updateFields", new object[] {
                    fields});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdateFields(fieldObject[] fields, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updateFields", new object[] {
                    fields}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndupdateFields(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult deleteFromDeliveryGroup([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] deliveryGroupObject deliveryGroup, [System.Xml.Serialization.XmlElementAttribute("deliveryIds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] deliveryIds, [System.Xml.Serialization.XmlElementAttribute("messageIds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] messageIds, [System.Xml.Serialization.XmlElementAttribute("messageRuleIds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] messageRuleIds)
        {
            object[] results = this.Invoke("deleteFromDeliveryGroup", new object[] {
                    deliveryGroup,
                    deliveryIds,
                    messageIds,
                    messageRuleIds});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteFromDeliveryGroup(deliveryGroupObject deliveryGroup, string[] deliveryIds, string[] messageIds, string[] messageRuleIds, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteFromDeliveryGroup", new object[] {
                    deliveryGroup,
                    deliveryIds,
                    messageIds,
                    messageRuleIds}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EnddeleteFromDeliveryGroup(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult clearLists([System.Xml.Serialization.XmlElementAttribute("list", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] mailListObject[] list)
        {
            object[] results = this.Invoke("clearLists", new object[] {
                    list});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginclearLists(mailListObject[] list, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("clearLists", new object[] {
                    list}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndclearLists(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addMessageRules([System.Xml.Serialization.XmlElementAttribute("messageRules", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] messageRuleObject[] messageRules)
        {
            object[] results = this.Invoke("addMessageRules", new object[] {
                    messageRules});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddMessageRules(messageRuleObject[] messageRules, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addMessageRules", new object[] {
                    messageRules}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddMessageRules(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addMessageFolders([System.Xml.Serialization.XmlElementAttribute("messageFolders", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] messageFolderObject[] messageFolders)
        {
            object[] results = this.Invoke("addMessageFolders", new object[] {
                    messageFolders});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddMessageFolders(messageFolderObject[] messageFolders, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addMessageFolders", new object[] {
                    messageFolders}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddMessageFolders(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public messageObject[] readMessages([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] messageFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeContent, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber)
        {
            object[] results = this.Invoke("readMessages", new object[] {
                    filter,
                    includeContent,
                    pageNumber});
            return ((messageObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadMessages(messageFilter filter, bool includeContent, int pageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readMessages", new object[] {
                    filter,
                    includeContent,
                    pageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public messageObject[] EndreadMessages(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((messageObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult deleteAccounts([System.Xml.Serialization.XmlElementAttribute("accounts", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] accountObject[] accounts)
        {
            object[] results = this.Invoke("deleteAccounts", new object[] {
                    accounts});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteAccounts(accountObject[] accounts, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteAccounts", new object[] {
                    accounts}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EnddeleteAccounts(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult updateSMSMessages([System.Xml.Serialization.XmlElementAttribute("messages", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] smsMessageObject[] messages)
        {
            object[] results = this.Invoke("updateSMSMessages", new object[] {
                    messages});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdateSMSMessages(smsMessageObject[] messages, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updateSMSMessages", new object[] {
                    messages}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndupdateSMSMessages(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public messageRuleObject[] readMessageRules([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] messageRuleFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber)
        {
            object[] results = this.Invoke("readMessageRules", new object[] {
                    filter,
                    pageNumber});
            return ((messageRuleObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadMessageRules(messageRuleFilter filter, int pageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readMessageRules", new object[] {
                    filter,
                    pageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public messageRuleObject[] EndreadMessageRules(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((messageRuleObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addWorkflows([System.Xml.Serialization.XmlElementAttribute("workflows", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] workflowObject[] workflows)
        {
            object[] results = this.Invoke("addWorkflows", new object[] {
                    workflows});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddWorkflows(workflowObject[] workflows, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addWorkflows", new object[] {
                    workflows}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddWorkflows(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult deleteSMSKeywords([System.Xml.Serialization.XmlElementAttribute("keyword", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] smsKeywordObject[] keyword)
        {
            object[] results = this.Invoke("deleteSMSKeywords", new object[] {
                    keyword});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteSMSKeywords(smsKeywordObject[] keyword, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteSMSKeywords", new object[] {
                    keyword}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EnddeleteSMSKeywords(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult updateWorkflows([System.Xml.Serialization.XmlElementAttribute("workflows", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] workflowObject[] workflows)
        {
            object[] results = this.Invoke("updateWorkflows", new object[] {
                    workflows});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdateWorkflows(workflowObject[] workflows, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updateWorkflows", new object[] {
                    workflows}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndupdateWorkflows(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addConversion([System.Xml.Serialization.XmlElementAttribute("conversions", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] conversionObject[] conversions)
        {
            object[] results = this.Invoke("addConversion", new object[] {
                    conversions});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddConversion(conversionObject[] conversions, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addConversion", new object[] {
                    conversions}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddConversion(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult updateAccounts([System.Xml.Serialization.XmlElementAttribute("accounts", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] accountObject[] accounts)
        {
            object[] results = this.Invoke("updateAccounts", new object[] {
                    accounts});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdateAccounts(accountObject[] accounts, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updateAccounts", new object[] {
                    accounts}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndupdateAccounts(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult updateHeaderFooters([System.Xml.Serialization.XmlElementAttribute("footers", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] headerFooterObject[] footers)
        {
            object[] results = this.Invoke("updateHeaderFooters", new object[] {
                    footers});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdateHeaderFooters(headerFooterObject[] footers, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updateHeaderFooters", new object[] {
                    footers}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndupdateHeaderFooters(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult deleteMessageFolders([System.Xml.Serialization.XmlElementAttribute("messageFolders", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] messageFolderObject[] messageFolders)
        {
            object[] results = this.Invoke("deleteMessageFolders", new object[] {
                    messageFolders});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteMessageFolders(messageFolderObject[] messageFolders, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteMessageFolders", new object[] {
                    messageFolders}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EnddeleteMessageFolders(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addLogins([System.Xml.Serialization.XmlElementAttribute("accounts", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] loginObject[] accounts)
        {
            object[] results = this.Invoke("addLogins", new object[] {
                    accounts});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddLogins(loginObject[] accounts, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addLogins", new object[] {
                    accounts}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddLogins(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult updateContacts([System.Xml.Serialization.XmlElementAttribute("contacts", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] contactObject[] contacts)
        {
            object[] results = this.Invoke("updateContacts", new object[] {
                    contacts});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdateContacts(contactObject[] contacts, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updateContacts", new object[] {
                    contacts}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndupdateContacts(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public deliveryGroupObject[] readDeliveryGroups([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] deliveryGroupFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber)
        {
            object[] results = this.Invoke("readDeliveryGroups", new object[] {
                    filter,
                    pageNumber});
            return ((deliveryGroupObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadDeliveryGroups(deliveryGroupFilter filter, int pageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readDeliveryGroups", new object[] {
                    filter,
                    pageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public deliveryGroupObject[] EndreadDeliveryGroups(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((deliveryGroupObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addToDeliveryGroup([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] deliveryGroupObject deliveryGroup, [System.Xml.Serialization.XmlElementAttribute("deliveryIds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] deliveryIds, [System.Xml.Serialization.XmlElementAttribute("messageIds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] messageIds, [System.Xml.Serialization.XmlElementAttribute("messageRuleIds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] messageRuleIds)
        {
            object[] results = this.Invoke("addToDeliveryGroup", new object[] {
                    deliveryGroup,
                    deliveryIds,
                    messageIds,
                    messageRuleIds});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddToDeliveryGroup(deliveryGroupObject deliveryGroup, string[] deliveryIds, string[] messageIds, string[] messageRuleIds, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addToDeliveryGroup", new object[] {
                    deliveryGroup,
                    deliveryIds,
                    messageIds,
                    messageRuleIds}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddToDeliveryGroup(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addSMSDeliveries([System.Xml.Serialization.XmlElementAttribute("smsdeliveries", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] smsDeliveryObject[] smsdeliveries)
        {
            object[] results = this.Invoke("addSMSDeliveries", new object[] {
                    smsdeliveries});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddSMSDeliveries(smsDeliveryObject[] smsdeliveries, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addSMSDeliveries", new object[] {
                    smsdeliveries}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddSMSDeliveries(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult deleteSMSDeliveries([System.Xml.Serialization.XmlElementAttribute("smsdeliveries", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] smsDeliveryObject[] smsdeliveries)
        {
            object[] results = this.Invoke("deleteSMSDeliveries", new object[] {
                    smsdeliveries});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteSMSDeliveries(smsDeliveryObject[] smsdeliveries, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteSMSDeliveries", new object[] {
                    smsdeliveries}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EnddeleteSMSDeliveries(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult deleteFields([System.Xml.Serialization.XmlElementAttribute("fields", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] fieldObject[] fields)
        {
            object[] results = this.Invoke("deleteFields", new object[] {
                    fields});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteFields(fieldObject[] fields, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteFields", new object[] {
                    fields}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EnddeleteFields(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public smsMessageObject[] readSMSMessages([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] messageFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeContent, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber)
        {
            object[] results = this.Invoke("readSMSMessages", new object[] {
                    filter,
                    includeContent,
                    pageNumber});
            return ((smsMessageObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadSMSMessages(messageFilter filter, bool includeContent, int pageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readSMSMessages", new object[] {
                    filter,
                    includeContent,
                    pageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public smsMessageObject[] EndreadSMSMessages(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((smsMessageObject[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult addApiTokens([System.Xml.Serialization.XmlElementAttribute("tokens", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] apiTokenObject[] tokens)
        {
            object[] results = this.Invoke("addApiTokens", new object[] {
                    tokens});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddApiTokens(apiTokenObject[] tokens, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addApiTokens", new object[] {
                    tokens}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndaddApiTokens(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public writeResult updateLogins([System.Xml.Serialization.XmlElementAttribute("accounts", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] loginObject[] accounts)
        {
            object[] results = this.Invoke("updateLogins", new object[] {
                    accounts});
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdateLogins(loginObject[] accounts, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updateLogins", new object[] {
                    accounts}, callback, asyncState);
        }

        /// <remarks/>
        public writeResult EndupdateLogins(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((writeResult)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("sessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://api.bronto.com/v4", ResponseNamespace = "http://api.bronto.com/v4", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webformObject[] readWebforms([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] webformFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber)
        {
            object[] results = this.Invoke("readWebforms", new object[] {
                    filter,
                    pageNumber});
            return ((webformObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginreadWebforms(webformFilter filter, int pageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("readWebforms", new object[] {
                    filter,
                    pageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public webformObject[] EndreadWebforms(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((webformObject[])(results[0]));
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://api.bronto.com/v4", IsNullable = true)]
    public partial class sessionHeader : System.Web.Services.Protocols.SoapHeader
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sessionId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool disableHistory;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool disableHistorySpecified;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class webformObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isDefault;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isDefaultSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime modified;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool modifiedSpecified;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class webformFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public filterType type;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("id", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public stringValue[] name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("webformType", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] webformType;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public enum filterType
    {

        /// <remarks/>
        AND,

        /// <remarks/>
        OR,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class stringValue
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public filterOperator @operator;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool operatorSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string value;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public enum filterOperator
    {

        /// <remarks/>
        EqualTo,

        /// <remarks/>
        NotEqualTo,

        /// <remarks/>
        StartsWith,

        /// <remarks/>
        EndsWith,

        /// <remarks/>
        DoesNotStartWith,

        /// <remarks/>
        DoesNotEndWith,

        /// <remarks/>
        GreaterThan,

        /// <remarks/>
        LessThan,

        /// <remarks/>
        GreaterThanEqualTo,

        /// <remarks/>
        LessThanEqualTo,

        /// <remarks/>
        Contains,

        /// <remarks/>
        DoesNotContain,

        /// <remarks/>
        SameYear,

        /// <remarks/>
        NotSameYear,

        /// <remarks/>
        SameDay,

        /// <remarks/>
        NotSameDay,

        /// <remarks/>
        Before,

        /// <remarks/>
        After,

        /// <remarks/>
        BeforeOrSameDay,

        /// <remarks/>
        AfterOrSameDay,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class deliveryGroupFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deliveryGroupId", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] deliveryGroupId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public memberType listByType;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool listByTypeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("automatorId", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] automatorId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("messageGroupId", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] messageGroupId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deliveryId", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] deliveryId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public stringValue[] name;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public enum memberType
    {

        /// <remarks/>
        DELIVERIES,

        /// <remarks/>
        AUTOMATORS,

        /// <remarks/>
        MESSAGEGROUPS,

        /// <remarks/>
        DELIVERYGROUPS,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class messageRuleFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public filterType type;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("id", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public stringValue[] name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ruleType", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] ruleType;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class messageFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public filterType type;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("id", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public stringValue[] name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("status", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] status;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("messageFolderId", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] messageFolderId;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class fieldsFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public filterType type;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("id", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public stringValue[] name;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class contentTagFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public filterType type;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("id", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public stringValue[] name;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class smsDeliveryFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public filterType type;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("id", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("messageId", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] messageId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("start", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public dateValue[] start;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("status", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] status;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deliveryType", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] deliveryType;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class dateValue
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public filterOperator @operator;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool operatorSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime value;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valueSpecified;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class deliveryFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public filterType type;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("id", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("messageId", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] messageId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("start", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public dateValue[] start;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("status", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] status;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deliveryType", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] deliveryType;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class smsKeywordFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public filterType type;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("id", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public stringValue[] name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string keywordType;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class segmentCriteriaObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @operator;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string condition;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string value;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class segmentRuleObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool canMatchAny;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool canMatchAnySpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("criteria", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public segmentCriteriaObject[] criteria;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class segmentObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool matchAnyRule;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool matchAnyRuleSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("rules", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public segmentRuleObject[] rules;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime lastUpdated;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastUpdatedSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long activeCount;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool activeCountSpecified;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class segmentFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public filterType type;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("id", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public stringValue[] name;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class deliveryRecipientStatObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deliveryId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string listId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string segmentId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string contactId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numSends;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSendsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numDeliveries;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numDeliveriesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numHardBadEmail;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numHardBadEmailSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numHardDestUnreach;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numHardDestUnreachSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numHardMessageContent;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numHardMessageContentSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numHardBounces;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numHardBouncesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numSoftBadEmail;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSoftBadEmailSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numSoftDestUnreach;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSoftDestUnreachSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numSoftMessageContent;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSoftMessageContentSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numSoftBounces;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSoftBouncesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numOtherBounces;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numOtherBouncesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numBounces;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numBouncesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long uniqOpens;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uniqOpensSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numOpens;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numOpensSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double avgOpens;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool avgOpensSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long uniqClicks;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uniqClicksSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numClicks;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numClicksSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double avgClicks;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool avgClicksSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long uniqConversions;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uniqConversionsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numConversions;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numConversionsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double avgConversions;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool avgConversionsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double revenue;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool revenueSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numSurveyResponses;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSurveyResponsesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numFriendForwards;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numFriendForwardsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numContactUpdates;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numContactUpdatesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numUnsubscribesByPrefs;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numUnsubscribesByPrefsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numUnsubscribesByComplaint;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numUnsubscribesByComplaintSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numContactLoss;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numContactLossSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numContactLossBounces;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numContactLossBouncesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double deliveryRate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deliveryRateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double openRate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool openRateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double clickRate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clickRateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double clickThroughRate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clickThroughRateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double conversionRate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool conversionRateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double bounceRate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bounceRateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double complaintRate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool complaintRateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double contactLossRate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool contactLossRateSpecified;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class deliveryRecipientFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public filterType type;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deliveryId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("listIds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] listIds;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("segmentIds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] segmentIds;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("contactIds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] contactIds;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class accountAllocations
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool canExceedAllocation;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool canExceedAllocationSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool canExceedSmsAllocation;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool canExceedSmsAllocationSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long emails;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool emailsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long contacts;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool contactsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long hosting;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hostingSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long logins;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool loginsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool api;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool apiSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long fields;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fieldsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime startDate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startDateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int periodFrequency;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool periodFrequencySpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bundle;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool defaultTemplates;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool defaultTemplatesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool branding;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool brandingSpecified;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class repliesSettings
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deletedAutomatedReplies;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deletedAutomatedRepliesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deleteSpam;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deleteSpamSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deleteUnsubscribeReplies;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deleteUnsubscribeRepliesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool handleUnsubscribes;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool handleUnsubscribesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unsubscribeKeywords;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string replyForwardEmail;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class brandingSettings
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string brandingImage;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string brandingImageLink;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string brandingImageUrl;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class formatSettings
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string timeZone;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dateFormat;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string locale;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class generalSettings
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string emergencyEmail;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long dailyFrequencyCap;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dailyFrequencyCapSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long weeklyFrequencyCap;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool weeklyFrequencyCapSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long monthlyFrequencyCap;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool monthlyFrequencyCapSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool textDelivery;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool textDeliverySpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool textPreference;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool textPreferenceSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool useSSL;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useSSLSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sendUsageAlerts;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sendUsageAlertsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string usageAlertEmail;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long currentContacts;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool currentContactsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long maxContacts;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxContactsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long currentMonthlyEmails;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool currentMonthlyEmailsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long currentHostingSize;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool currentHostingSizeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long maxHostingSize;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxHostingSizeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool agencyTemplateuploadPerm;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool agencyTemplateuploadPermSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool defaultTemplates;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool defaultTemplatesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableInboxPreviews;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableInboxPreviewsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowCustomizedBranding;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allowCustomizedBrandingSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long bounceLimit;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bounceLimitSpecified;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class accountObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string status;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public generalSettings generalSettings;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public contactInformation contactInformation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public formatSettings formatSettings;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public brandingSettings brandingSettings;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public repliesSettings repliesSettings;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public accountAllocations allocations;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class contactInformation
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string organization;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string firstName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string email;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string phone;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string address;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string address2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string city;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string state;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zip;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string country;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string notes;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class accountFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public filterType type;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("id", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public stringValue[] name;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class workflowFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public filterType type;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("id", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public stringValue[] name;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class remailObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int days;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool daysSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string time;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string subject;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string activity;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class messageFieldObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string content;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class deliveryObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime start;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string status;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fromEmail;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fromName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string replyEmail;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool authentication;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool authenticationSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool replyTracking;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool replyTrackingSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageRuleId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool optin;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool optinSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long throttle;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool throttleSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool fatigueOverride;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fatigueOverrideSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("content", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public messageContentObject[] content;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("recipients", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public deliveryRecipientObject[] recipients;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fields", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public messageFieldObject[] fields;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public remailObject remail;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numSends;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSendsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numDeliveries;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numDeliveriesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numHardBadEmail;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numHardBadEmailSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numHardDestUnreach;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numHardDestUnreachSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numHardMessageContent;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numHardMessageContentSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numHardBounces;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numHardBouncesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numSoftBadEmail;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSoftBadEmailSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numSoftDestUnreach;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSoftDestUnreachSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numSoftMessageContent;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSoftMessageContentSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numSoftBounces;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSoftBouncesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numOtherBounces;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numOtherBouncesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numBounces;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numBouncesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long uniqOpens;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uniqOpensSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numOpens;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numOpensSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double avgOpens;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool avgOpensSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long uniqClicks;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uniqClicksSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numClicks;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numClicksSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double avgClicks;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool avgClicksSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long uniqConversions;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uniqConversionsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numConversions;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numConversionsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double avgConversions;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool avgConversionsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal revenue;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool revenueSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numSurveyResponses;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSurveyResponsesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numFriendForwards;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numFriendForwardsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numContactUpdates;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numContactUpdatesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numUnsubscribesByPrefs;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numUnsubscribesByPrefsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numUnsubscribesByComplaint;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numUnsubscribesByComplaintSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numContactLoss;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numContactLossSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numContactLossBounces;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numContactLossBouncesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double deliveryRate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deliveryRateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double openRate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool openRateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double clickRate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clickRateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double clickThroughRate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clickThroughRateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double conversionRate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool conversionRateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double bounceRate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bounceRateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double complaintRate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool complaintRateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double contactLossRate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool contactLossRateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numSocialShares;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSocialSharesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numSharesFacebook;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSharesFacebookSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numSharesTwitter;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSharesTwitterSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numSharesLinkedIn;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSharesLinkedInSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numSharesDigg;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSharesDiggSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numSharesMySpace;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSharesMySpaceSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numViewsFacebook;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numViewsFacebookSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numViewsTwitter;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numViewsTwitterSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numViewsLinkedIn;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numViewsLinkedInSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numViewsDigg;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numViewsDiggSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numViewsMySpace;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numViewsMySpaceSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numSocialViews;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSocialViewsSpecified;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class messageContentObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string subject;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string content;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class deliveryRecipientObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deliveryType;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class recentActivityObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime createdDate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createdDateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string contactId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string listId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string segmentId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string keywordId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deliveryId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string workflowId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string activityType;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string emailAddress;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mobileNumber;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string contactStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deliveryType;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime deliveryStart;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deliveryStartSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string workflowName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string segmentName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string listName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string listLabel;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string automatorName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string smsKeywordName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bounceType;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bounceReason;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string skipReason;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string linkName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string linkUrl;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string orderId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unsubscribeMethod;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ftafEmails;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string socialNetwork;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string socialActivity;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string webformType;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string webformAction;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string webformName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(recentInboundActivitySearchRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(recentOutboundActivitySearchRequest))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public abstract partial class recentActivitySearchRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime start;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int size;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public readDirection readDirection;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readDirectionSpecified;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public enum readDirection
    {

        /// <remarks/>
        NEXT,

        /// <remarks/>
        FIRST,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class recentInboundActivitySearchRequest : recentActivitySearchRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("types", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] types;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class recentOutboundActivitySearchRequest : recentActivitySearchRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("types", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] types;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class contactFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public filterType type;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("id", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("email", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public stringValue[] email;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mobileNumber", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public stringValue[] mobileNumber;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("status", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] status;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("created", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public dateValue[] created;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("modified", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public dateValue[] modified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("listId", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] listId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("segmentId", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] segmentId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SMSKeywordID", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] SMSKeywordID;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("msgPref", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] msgPref;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("source", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] source;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("customSource", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public stringValue[] customSource;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class smsKeywordObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long subscriberCount;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool subscriberCountSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long frequencyCap;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool frequencyCapSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime dateCreated;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateCreatedSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime scheduledDeleteDate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool scheduledDeleteDateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string confirmationMessage;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageContent;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string keywordType;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class conversionObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string contactId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string email;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string orderId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int quantity;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool quantitySpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal amount;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool amountSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal orderTotal;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool orderTotalSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime createdDate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createdDateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deliveryId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string automatorId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string listId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string segmentId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deliveryType;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tid;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class conversionFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("contactId", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] contactId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deliveryId", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] deliveryId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("id", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("orderId", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] orderId;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class smsMessageObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string status;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageFolderId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool shortenUrls;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool shortenUrlsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string content;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class activityObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime activityDate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool activityDateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string contactId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deliveryId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string listId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string segmentId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trackingType;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bounceReason;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bounceType;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string linkName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string linkUrl;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string url;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int quantity;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool quantitySpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string amount;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class activityFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime start;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int size;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sizeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("types", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] types;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public readDirection readDirection;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readDirectionSpecified;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class contentTagObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string value;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class fieldOptionObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string label;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string value;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isDefault;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class fieldObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string label;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string visibility;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("options", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public fieldOptionObject[] options;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class headerFooterObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string html;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string text;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isHeader;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class headerFooterFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public filterType type;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("id", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public stringValue[] name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("position", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] position;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class productObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sku;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string category;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string image;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string url;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int quantity;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool quantitySpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal price;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool priceSpecified;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class orderObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string contactId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string email;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("products", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public productObject[] products;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime orderDate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool orderDateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deliveryId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string automatorId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string listId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string segmentId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deliveryType;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tid;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class messageFolderObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string parentId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string parentName;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class messageFolderFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public filterType type;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("id", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public stringValue[] name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parentId", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] parentId;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class smsMessageFieldObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string content;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class smsDeliveryContactsObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string keyword;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("contactIds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] contactIds;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class smsDeliveryObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime start;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deliveryType;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string status;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string content;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("recipients", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public deliveryRecipientObject[] recipients;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public smsDeliveryContactsObject contactRecipients;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("keywords", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] keywords;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fields", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public smsMessageFieldObject[] fields;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numSends;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSendsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numDeliveries;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numDeliveriesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numIncoming;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numIncomingSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numBounces;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numBouncesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double deliveryRate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deliveryRateSpecified;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class messageObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string status;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageFolderId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("content", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public messageContentObject[] content;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class mailListObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string label;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long activeCount;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool activeCountSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string status;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string visibility;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class mailListFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public filterType type;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("id", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public stringValue[] name;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class messageRuleObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageId;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class apiTokenObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int permissions;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool active;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime created;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createdSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime modified;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool modifiedSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string accountId;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class apiTokenFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public filterType type;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("id", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("accountId", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] accountId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public stringValue[] name;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class readOnlyContactData
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string geoIPCity;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string geoIPStateRegion;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string geoIPZip;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string geoIPCountry;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string geoIPCountryCode;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string primaryBrowser;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mobileBrowser;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string primaryEmailClient;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mobileEmailClient;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string operatingSystem;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime firstOrderDate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool firstOrderDateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime lastOrderDate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastOrderDateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal lastOrderTotal;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastOrderTotalSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long totalOrders;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool totalOrdersSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal totalRevenue;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool totalRevenueSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal averageOrderValue;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool averageOrderValueSpecified;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class contactField
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fieldId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string content;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class contactObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string email;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mobileNumber;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string status;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string msgPref;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string source;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string customSource;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime created;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createdSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime modified;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool modifiedSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deleted;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deletedSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("listIds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] listIds;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fields", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public contactField[] fields;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SMSKeywordIDs", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] SMSKeywordIDs;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numSends;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSendsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numBounces;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numBouncesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numOpens;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numOpensSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numClicks;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numClicksSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long numConversions;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numConversionsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float conversionAmount;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool conversionAmountSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public readOnlyContactData readOnlyContactData;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class workflowObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string siteId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string status;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime createdDate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createdDateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime modifiedDate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool modifiedDateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime activatedDate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool activatedDateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime deActivatedDate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deActivatedDateSpecified;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class deliveryGroupObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string visibility;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long deliveryCount;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deliveryCountSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime createdDate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createdDateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deliveryIds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] deliveryIds;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("messageRuleIds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] messageRuleIds;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("messageIds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] messageIds;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class resultItem
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isNew;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isNewSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isError;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isErrorSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int errorCode;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string errorString;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class writeResult
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("errors", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public System.Nullable<int>[] errors;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("results", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public resultItem[] results;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class loginObject
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string username;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public contactInformation contactInformation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool permissionAgencyAdmin;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionAgencyAdminSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool permissionAdmin;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionAdminSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool permissionApi;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionApiSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool permissionUpgrade;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionUpgradeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool permissionFatigueOverride;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionFatigueOverrideSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool permissionMessageCompose;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionMessageComposeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool permissionMessageApprove;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionMessageApproveSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool permissionMessageDelete;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionMessageDeleteSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool permissionAutomatorCompose;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionAutomatorComposeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool permissionListCreateSend;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionListCreateSendSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool permissionListCreate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionListCreateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool permissionSegmentCreate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionSegmentCreateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool permissionFieldCreate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionFieldCreateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool permissionFieldReorder;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionFieldReorderSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool permissionSubscriberCreate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionSubscriberCreateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool permissionSubscriberView;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionSubscriberViewSpecified;
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceStudio", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.bronto.com/v4")]
    public partial class loginFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public filterType type;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("username", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public stringValue[] username;
    }





}